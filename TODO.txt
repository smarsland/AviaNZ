
# TODO for AviaNZ

SM:

(1) SRM Update the manual lots
(2) SRM And the video!
(3) All Check it's really stable
(4) What else are we adding? Or removing?
    DOC version
(5) SRM Add wavelet segmentation to best
(6) SRM Multiprocessing where possible
(7) NP Classify segments
    (i) Wavelets better version
    (ii) Learning based on whatever (check Raven features)
    (iii) SRM Wavelet energy features
(8) NP Parameter setting

We should start to decide what make a specialised filter
    Mingap, minlength
    Threshold for segmenters
    Wavelet nodes
    Trained classifiers

*** Exporter problem
Exporter for mac but scipy.misc for Windows - it works fine
Can we stick to one? Check scipy.misc on mac

spectrogram paramaters - have the option to choose visible frequency range (e.g. 0-8000 Hz) but
cannot undo and segment labels get disappear!

Wavelet denoising with best tree?

Work out how to make old wavelet method produce too many segments

Make a new method (not inside Segmentation):
    (1) Perform segmentation using at least one of old wavelet method and any other segmenter, possibly multiple options
    # Partly done, (FIR + median clip). Add in wavelets.
    # And it does need parameters
    (2) Combine the segments as appropriate
    # Two versions are done. Opens it out so far, no max. Either with or without envelopes kept.
    (3) Perform classification on each segment using at least one of wavelet energies, Raven feature, MFCC, LPC, fundamental freq
    # To be done (ready to modify wavelet segmentation part)

Plot the wavelet energy for noise, crickets, calls, etc.
    Suppress the noise nodes, reconstruct -- what happens?
Parallel process the segmenters

get name from standard files and use it
    # Name bit is done, not yet used


# Look into the invertible CQT
    # Doesn't seem to help with tril1
# Dominant frequency
# warbleR features
# plots of eg xcorr
# DTW - 2D, fast
    look into DP

NP:

*** Ensure saving of the config file and the data files on Windows
# done

Test the idea of using the wavelet nodes with either
    (a or b or c) and not (d or e)
    (a and (b or c))
    or maybe both :)
    Will have to count the number of times each occurs
    Idea is to reduce (i) misclassifications, (2) crickets, (3) wide-band clicks, (4) rain

Make a pretty (simple) version of the Process File dialog
#Done, but seems like I have to add more features to this interface
    (1) add a help (manual)
    (2) Check if the folder has been processed halfway in a previous go find the new starting point rather than starting from first file
    (3) Train wavelet to detect wind and rain so that the user can run this detector to see the proportion of useful data
        (e.g. SIPO dataset is rainy, so almost all the recordings turned out to be positive due to rain)

Enable parameter setting
# partially done TODO: merge changes done by different ways (parameter tree and other interface shortcuts)

Paper!

Raven features

Denoising experiments
    -> short time better than long?
    -> denoise only segments
    -> compare python and matlab

Segmentation experiments
    -> like thesis but better :)
    -> paper

(1) Minor bugs and extensions

    NP: Read mp3 files
# SM: pysox

    NP: Make it possible to change parameters (look into pyqtgraph ParameterTree)
    done

    ??: What to do with stereo sound? How about consistent sample rates?

    NP: Make play sounds play the denoised version after denoising
# This seems to be complicated with undo etc. Still thinking whats the best way to do it,
  can easily add a separate button to play denoised but not nice. I fixed the plotting problem though.

	NP: Stop loading the file when choose to cancel the progress bar
# Removed the cancel button for now. otherwise have to unroll what happened inside the loadFile when the user cancel it.

	File list dock becomes frozen - one was experiencing this. Had to restart the program.
	    # Can we reproduce it?

    NP: Fully integrate wavelet seg into program
    NP: We actually want Kiwi (M) and Kiwi (F), and need to get all the ruru calls
    NP: Want to have some form of machine learning
		(1) decision tree
		(2) MLP
		(3) SVM
		(4) boosting
    SM: And need to think about the 95% confidence thing a lot more

    SM: Make the segmentations work fully
        Get the minimum time of a segment parameter sorted
        Work out how to combine the methods, particularly, spot overlaps in segments and combine them
        Work out parameters and how to set them
        Remove cross-correlation? Or just improve?

    Both: Think about nice ways to train a new wavelet filter
		And get the whole workflow sorted for it

(4) Features
    Use the wavelets
    Finish the Raven features
    Add MFCC (nearly done)
    And whatever else seems interesting

    More on fundamental frequency
        smoothing?
        harvest or bana (yaapt was awful)
    Shape metrics

(5) Learning
    Standard methods
        MLP
        Decision tree
        Boosting
        SVM
    LSTM or GRU

    HMM to string syllables together

(6) Other
    Think more about the spectrogram inversion
        If it works --> Stu's bats
        Denoise the spectrogram fully (median filter, smoothing, consider grab-cut)

    Any necessary database or metadata things?

    Bats do keep on coming up...

    Generative noise model
