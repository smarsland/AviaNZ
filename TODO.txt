
# TODO for AviaNZ

(1) Minor bugs and extensions

    Add Sumudu's name

    Tidy code, ensure comments, etc.

    Make the oscillogram and spectrogram line up (basically, just sort out y-axis labels)

    Enable removal of fill colour for spectrogram drag boxes

    Sort out the bandlimited playing -> Windows permissions for deleting file

    Undo for segmentation
    
    Spectrogram drawing after changes (e.g. denoising) seems to have a bug
    Make play sounds play the denoised version after denoising

    Save the amount of time the user makes the window show back into the config file

    Add in the 'who the user is' annotation
    Get the time from the file name (if standard) and use it to put day or night birds first

    Read mp3 files

    Make the arrows (on top-right) move on to next file if double clicked (and at start/end?)

    Add a change directory option

    And make the Choose Folder in the Process Folder be a folder not a file!

    Make the boxes below the overview be clickable to get to that section
    And stop the lines going too far to the right

    Get the manual and cheat sheet included in the program

    Make it possible to change parameters (look into pyqtgraph ParameterTree)
    
    Output to excel

    What to do with stereo sound? How about consistent sample rates?

    The updating of the colour of the overview seg has some colour weirdness -- gets darker. Some sort of overlapping? Not a major problem.

	Add play button to check segment, pictue alone is not enough to confirm. Make the pictures (check segment 1) small.

	Stop loading the file when choose to cancel the progress bar.

	File list dock becomes frozen - one was experiencing this. Had to restart the program.
 
	Control marking the same segments again and again - multiple clicks on Find matches with the same pattern.
	
	Udate the status bar when auto saving the annotation? Users want to know/confirm.

	
(2) Memory management
    It's a pain, but needs thinking about and then doing
    Could just split the file into shorter pieces? 
    Split files into 5 minute segments or whatever or look into paging

(3) Denoising, Wavelets and Segmentation
    Make denoising work
        Is there something wrong?
        How long should a denoise piece be?
    
    Stop the segmentation being based on 1s
    Fully integrate wavelet seg into program
    We actually want Kiwi (M) and Kiwi (F), and need to get all the ruru calls
    Want to have some form of machine learning
    And need to think about the 95% confidence thing a lot more
    Add in the Check Segments 2 bit for this, and actually process the results!

    Make the segmentations work fully
        Get the minimum time of a segment parameter sorted
        Work out how to combine the methods, particularly, spot overlaps in segments and combine them
        Work out parameters and how to set them
        Remove cross-correlation? Or just improve?

    Think about nice ways to train a new wavelet filter

    And get the whole workflow sorted for it

    Use intensity of colour to encode certainty?

(4) Features
    Use the wavelets
    Finish the Raven features
    Add MFCC (nearly done)
    And whatever else seems interesting

    More on fundamental frequency
        smoothing?
        harvest or bana (yaapt was awful)
    Shape metrics

(5) Learning
    Standard methods
        MLP
        Decision tree
        Boosting
        SVM
    LSTM or GRU

    HMM to string syllables together

(6) Other
    Think more about the spectrogram inversion
        If it works --> Stu's bats
        Denoise the spectrogram fully (median filter, smoothing, consider grab-cut)

    Any necessary database or metadata things?

    Bats do keep on coming up...

